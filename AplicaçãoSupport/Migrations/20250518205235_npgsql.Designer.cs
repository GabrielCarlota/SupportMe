// <auto-generated />
using System;
using AplicaçãoSupport.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AplicaçãoSupport.Migrations
{
    [DbContext(typeof(AplicaçãoSupportDbContext))]
    [Migration("20250518205235_npgsql")]
    partial class npgsql
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AplicaçãoSupport.Models.AgendamentosModels.Agendamentos", b =>
                {
                    b.Property<int>("AgendamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AgendamentoId"));

                    b.Property<int>("AtendenteId")
                        .HasColumnType("integer");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataDaRealizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataDoAgendamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MotivoAgendamento")
                        .HasColumnType("text");

                    b.Property<char>("Realizado")
                        .HasColumnType("character(1)");

                    b.HasKey("AgendamentoId");

                    b.HasIndex("AtendenteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.Atendente", b =>
                {
                    b.Property<int>("AtendenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AtendenteId"));

                    b.Property<string>("NomeAtendente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.HasKey("AtendenteId");

                    b.ToTable("Atendente");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.Atendimentos", b =>
                {
                    b.Property<int>("AtendimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AtendimentoId"));

                    b.Property<int>("AtendenteId")
                        .HasColumnType("integer");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAtendimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProblemaApresentado")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ResolucaoDoProblema")
                        .HasColumnType("text");

                    b.HasKey("AtendimentoId");

                    b.HasIndex("AtendenteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("ClienteNome")
                        .HasColumnType("text");

                    b.Property<string>("ClienteTelefone")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<char>("Sintegra")
                        .HasColumnType("character(1)");

                    b.HasKey("ClienteId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmpresaId"));

                    b.Property<string>("NomeEmpresa")
                        .HasColumnType("text");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.AgendamentosModels.Agendamentos", b =>
                {
                    b.HasOne("AplicaçãoSupport.Models.Atendente", "Atendente")
                        .WithMany()
                        .HasForeignKey("AtendenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AplicaçãoSupport.Models.Clientes", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atendente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.Atendimentos", b =>
                {
                    b.HasOne("AplicaçãoSupport.Models.Atendente", "Atendente")
                        .WithMany("Atendimentos")
                        .HasForeignKey("AtendenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AplicaçãoSupport.Models.Clientes", "Cliente")
                        .WithMany("Atendimentos")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Atendente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.Clientes", b =>
                {
                    b.HasOne("AplicaçãoSupport.Models.Empresa", "Empresa")
                        .WithMany("Clientes")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.Atendente", b =>
                {
                    b.Navigation("Atendimentos");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.Clientes", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Atendimentos");
                });

            modelBuilder.Entity("AplicaçãoSupport.Models.Empresa", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
